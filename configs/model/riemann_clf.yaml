_target_: src.models.baseline_models.classifier_pipeline
steps_config: # use yaml list syntax to preserve to order
  FeatureExtraction:
    AverageVariance:
      applied: True
      excllev: 1.8
      estimator: 'lwf' # 'scm' | 'lwf'
    Covariance:
      applied: True
      estimator: 'lwf' # 'scm' | 'lwf'
      axis: -2 # axis: -1 for time, -2 (default) for channels, 0 for epochs
  Classification:
    SVC-pyriemann:
      applied: True
      metric: riemann # riemann | euclid
      class_weight: balanced # dict
      probability: True # Whether to enable probability estimates. This must be enabled prior to calling fit, and will slow down that method.
      kernel_fct: null
      Cref: null
      C: 1.0 # Regularization parameter. The strength of the regularization is inversely proportional to C. Must be strictly positive. The penalty is a squared l2 penalty.
      shrinking: True # Whether to use the shrinking heuristic.
      tol: 1e-3 # Tolerance for stopping criterion.
      cache_size: 200 # Specify the size of the kernel cache (in MB).
      verbose: False # Enable verbose output. Note that this setting takes advantage of a per-process runtime setting in libsvm that, if enabled, may not work properly in a multithreaded context.
      max_iter: -1 # Hard limit on iterations within solver, or -1 for no limit.
      decision_function_shape: "ovr" # Whether to return a one-vs-rest (‘ovr’) decision function of shape (n_samples, n_classes) as all other classifiers, or the original one-vs-one (‘ovo’) decision function of libsvm which has shape (n_samples, n_classes * (n_classes - 1) / 2).
      break_ties: False # If true, decision_function_shape='ovr', and number of classes > 2, predict will break ties according to the confidence values of decision_function; otherwise the first class among the tied classes is returned. Please note that breaking ties comes at a relatively high computational cost compared to a simple predict.
      random_state: null # Controls the pseudo random number generation for shuffling the data for probability estimates. Ignored when probability is False. Pass an int for reproducible output across multiple function calls.