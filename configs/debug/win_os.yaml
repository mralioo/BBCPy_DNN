# @package _global_

# overwrite task name so debugging logs are stored in separate folder
task_name: "debug-win"

defaults:
  - override /trainer: sklearn.yaml
#  - override /model: riemann_tangent_clf.yaml
#  - override /hparams_search: hpo_riemann_tangent.yaml
#  - override /model: riemann_clf.yaml
#  - override /hparams_search: hpo_riemann.yaml
#  - override /model: mbcsp_clf.yaml
#  - override /hparams_search: hpo_mbcsp.yaml
#  - override /model: csp_clf.yaml
#  - override /hparams_search: hpo_csp.yaml


tune: False
train: True

paths:
  root_dir: ${oc.env:PROJECT_ROOT}
  data_dir: D:\SMR\
  log_dir: ${oc.env:PROJECT_ROOT}\logs\26_10
  output_dir: ${hydra:runtime.output_dir}
  work_dir: ${hydra:runtime.cwd}
  results_dir: ${paths.log_dir}\results # final results directory

# disable callbacks and loggers during debugging
callbacks: null
logger:
  mlflow:
#        experiment_name: DEBUG-HPO
    experiment_name: DEBUG-TRAIN
#    run_name: riemann_tangent
#    run_name: riemann
#    run_name: csp
#    run_name: mbcsp
    tracking_uri: ${paths.log_dir}\mlflow\mlruns

data:
#  task_name: "2D"
  trial_type: "forced"
  ival: 0s:10s:3ms
#  chans: [ "*" ]
#  bands: [ 8, 13 ]
  subject_sessions_dict:
    S1: "all"
#  fallback_neighbors: 4
#  loading_data_mode: "within_subject"
#  process_noisy_channels: True
#  ignore_noisy_sessions: False
#  transform: False
#  normalize: { norm_type: "std", norm_axis: 0 }

#trainer:
#  train_val_split: False
#  cv:
#    _target_: sklearn.model_selection.KFold
#    n_splits: 2
#    shuffle: True

extras:
  ignore_warnings: False
  enforce_tags: False

# sets level of all command line loggers to 'DEBUG'
# https://hydra.cc/docs/tutorials/basic/running_your_app/logging/
hydra:
  job_logging:
    root:
      level: DEBUG
  # use this to also set hydra loggers to 'DEBUG'
  verbose: True


